float4 CameraRightVector : PB_CameraRight;
float4 CameraUpVector    : PB_CameraUp;
float4 CameraFrontVector : PB_CameraFront;

struct app2vertParticleGeneral
{
  float4 Position  : POSITION; //in object space  
  float2 baseTC    : TEXCOORD0;
  float4 Color     : COLOR0;
  float4 Expansion : COLOR1;
  float4 ScreenRot : PSIZE0;  
};

// add other required stuff here
struct vert2FragParticleGeneral
{
  float4 Position  : POSITION;  //in projection space
  
#ifdef %_RT_SOFT_PARTICLE
	float4 hPosTexProj  : TEXCOORDN;
	float4 particleFade : TEXCOORDN;
#endif
};

void Particle_Setup_General(inout float4 vPos, float4x4 mViewProj, inout app2vertParticleGeneral IN, out vert2FragParticleGeneral OUT)
{
  //////////////////////////////////////////////////////
  // coord expansion.
    
	float3 r = CameraRightVector.xyz * IN.ScreenRot.x + CameraUpVector.xyz * IN.ScreenRot.y;
	float3 u = CameraRightVector.xyz * IN.ScreenRot.z + CameraUpVector.xyz * IN.ScreenRot.w;
	
  vPos.xyz += r * IN.Expansion.x + u * IN.Expansion.y;
  
  // Position in screen space.
  OUT.Position = mul(mViewProj, vPos);
  
  //////////////////////////////////////////////////////////////////////
  // soft particle setup
  
  #ifdef %_RT_SOFT_PARTICLE
    OUT.hPosTexProj = HPosToScreenTC(OUT.Position);

	  float size = sqrt( abs(IN.ScreenRot.x*IN.ScreenRot.w - IN.ScreenRot.y*IN.ScreenRot.z) );
	  float4 newPos = float4( vPos.xyz + size * CameraFrontVector.xyz, 1.0 );

	  float hNewPosZ = dot( mViewProj[ 2 ], newPos );
	  float hNewPosW = dot( mViewProj[ 3 ], newPos );
	  OUT.Position.z = OUT.Position.w *( hNewPosZ / hNewPosW );

	  if( hNewPosW < g_VS_NearFarClipDist.x && hNewPosW + size > g_VS_NearFarClipDist.x )
		  OUT.Position.z = 0;

	  float particleThicknessInv = 1.0 / ( 2.0 * size );
	  float scaleCamera = ( hNewPosW + size - g_VS_NearFarClipDist.x ) * 2.0 * particleThicknessInv;
	  OUT.particleFade.x = scaleCamera;
	  OUT.particleFade.y = particleThicknessInv;
	  OUT.particleFade.z = size;
	  OUT.particleFade.w = hNewPosW;
  #endif     
}

//========================================================================


